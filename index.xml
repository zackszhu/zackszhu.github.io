<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to Chaojie Zhu's page on Chaojie Zhu</title><link>https://www.zcj.io/</link><description>Recent content in Welcome to Chaojie Zhu's page on Chaojie Zhu</description><generator>Hugo</generator><language>en-us</language><managingEditor>me@zcj.io (Chaojie Zhu)</managingEditor><webMaster>me@zcj.io (Chaojie Zhu)</webMaster><copyright>Copyright © 2021-2025, Chaojie Zhu.</copyright><lastBuildDate>Sat, 29 Mar 2025 21:51:49 -0700</lastBuildDate><atom:link href="https://www.zcj.io/index.xml" rel="self" type="application/rss+xml"/><item><title>One Year With the PARA Method</title><link>https://www.zcj.io/p/one-year-with-the-para-method/</link><pubDate>Sat, 29 Mar 2025 21:51:49 -0700</pubDate><author>me@zcj.io (Chaojie Zhu)</author><guid>https://www.zcj.io/p/one-year-with-the-para-method/</guid><description>&lt;h2 id="what-is-para">What is PARA?&lt;/h2>
&lt;p>If you&amp;rsquo;re familiar with knowledge management or the concept of a &amp;ldquo;second brain&amp;rdquo;, you&amp;rsquo;ve likely heard of the PARA method. In a nutshell, PARA is a system for organizing your documents and, presumably, your knowledge. Its core idea is to use four main folders (or five, if you include an INBOX): Projects, Areas, Resources, and Archives.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Projects:&lt;/strong> This folder holds active projects. Each sub-folder represents a separate project with a clear goal, steps, and target date.&lt;/li>
&lt;li>&lt;strong>Areas:&lt;/strong> This folder contains areas of responsibility that require ongoing maintenance and have no definite end date.&lt;/li>
&lt;li>&lt;strong>Resources:&lt;/strong> This is where you store data you&amp;rsquo;re interested in and have collected.&lt;/li>
&lt;li>&lt;strong>Archives:&lt;/strong> This folder is for anything no longer active.&lt;/li>
&lt;/ul>
&lt;p>The idea is that when you start working on something, you treat it as a project and gather all related materials into the corresponding project folder.
Meanwhile, when you collect external materials, they go into the INBOX folder first. From there, you move them into the appropriate folder: Projects, Areas, or Resources.&lt;/p>
&lt;p>This approach offers several benefits:&lt;/p>
&lt;ol>
&lt;li>You don&amp;rsquo;t need to worry about where to immediately place external materials; just drop them in the INBOX.&lt;/li>
&lt;li>You establish a routine for moving items from the INBOX to a designated location based on your current work.&lt;/li>
&lt;li>You gain easy access to all materials needed for your current project, allowing you to focus on what&amp;rsquo;s most important.&lt;/li>
&lt;/ol>
&lt;h2 id="how-para-helps-me">How PARA Helps Me&lt;/h2>
&lt;p>PARA has significantly benefited me, especially in my work. As a software engineer, I manage multiple projects through milestones. PARA&amp;rsquo;s GTD nature helps organize my documents, allowing me to focus more on thinking than on remembering where things are.&lt;/p>
&lt;p>I particularly appreciate the easy access PARA provides.&lt;/p>
&lt;p>If you understand how computers work, you might be familiar with memory hierarchy and spatial locality. When relevant information is stored close together, computers access it faster. This is why data is loaded from hard disks to memory, and then to caches.&lt;/p>
&lt;p>The same principle applies to our brains and how we organize documents. We want the information we need readily accessible in our minds. However, due to our brain&amp;rsquo;s capacity, this isn&amp;rsquo;t always possible, especially when a topic involves materials from different sources at different times. Storing all relevant materials within a single, active project folder is essentially optimizing for spatial locality. This makes it much easier to prepare for tasks or quickly find information during meetings.&lt;/p>
&lt;h2 id="what-para-is-not">What PARA is Not&lt;/h2>
&lt;p>As mentioned, PARA is fundamentally a GTD framework. It&amp;rsquo;s excellent for helping you complete tasks more efficiently. However, it&amp;rsquo;s not a perfect knowledge management framework. It doesn&amp;rsquo;t emphasize the format of materials, which is good for easy capture but not ideal for long-term maintenance. It also doesn&amp;rsquo;t focus on linking knowledge, making it harder to uncover connections between your existing notes.&lt;/p>
&lt;p>Consider the practical issue of reading two books on the same topic at the same time. If both book-reading projects mention &amp;ldquo;Machine Learning,&amp;rdquo; you&amp;rsquo;ll likely have separate notes on this concept in two different project folders. There&amp;rsquo;s no built-in routine to merge these similar concepts into a single note. While you can mitigate this with extra processing during archiving, it seems like a limitation stemming from its GTD core.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>PARA is a valuable project management framework. It offers many benefits, but its GTD focus means it&amp;rsquo;s not the ideal system for comprehensive knowledge management.&lt;/p></description></item><item><title>On Switch to Hugo</title><link>https://www.zcj.io/p/on-switch-to-hugo/</link><pubDate>Sun, 26 Dec 2021 21:39:12 -0800</pubDate><author>me@zcj.io (Chaojie Zhu)</author><guid>https://www.zcj.io/p/on-switch-to-hugo/</guid><description>&lt;p>I’ve had a personal website for years. When I started to learn Python eight years ago, I used the Flask framework to create a lightweight personal blog. It loaded my articles from my SQLite database and used the Jinja template engine to fill the contents in. GitHub apparently couldn’t host the Flask web server, so I hosted it on my personal VPS.&lt;/p>
&lt;p>Later, as I learned more about React framework and good software engineer practices, I iterated on my website as well as decoupled the frontend and backend. The backend is still Flask and SQLite, but I switched the frontend part to React. The communication between the frontend and the backend is through REST APIs. Thus, I got the chance to only host my backend on my server and move all the static frontend pages to GitHub Pages.&lt;/p>
&lt;p>After I went to CMU ETC in 2019, the faculty asked all the students to have a personal website to showcase all the work and projects we were working on. Also, I was not a productive writer, so I didn’t have much to write in my blog. I decided to remove the backend part completely from my website and only have one single page to list all my projects as my portfolio. I didn’t follow the rapid frontend trends too well, so mostly, I reused the components in my previous blog site.&lt;/p>
&lt;p>Today, I decided to upgrade my website for the third time. I switch to Hugo as my static site generator, and here’s why.&lt;/p>
&lt;h2 id="why-a-new-website">Why a new website?&lt;/h2>
&lt;p>I am perfectly satisfied with my previous website, a one-page portfolio. It’s neat, informative, and conveys all I want to tell my potential audience clearly. However, as I read more on note-taking, I figured that I needed to write something down to complete the full learning loop. The writings will be light on the regular notes but more about linking ideas and how they shape my decision-making.&lt;/p>
&lt;p>As mentioned, the frontend technologies evolved so fast that I only know the names of React Hooks, Vue, and Svelt. My main focus is not on frontend development, so I don’t want to spend too much time catching up with the modern frontend world and extending my previously single react web page to a full-fledged web application. I need something simple to set up and yet powerful to be extended. I need a new personal website.&lt;/p>
&lt;h2 id="why-hugo-and-this-template">Why Hugo and this template?&lt;/h2>
&lt;p>The first thing I decided for my new website is that I don’t want to host a backend web server. I appreciate the power of GitHub Pages and the potential to use Vercel/Netlify for acceleration. I further narrowed it down to Hugo because I’m not fond of JavaScript that much. Hugo is the hottest one on the list on &lt;a href="https://jamstack.org/generators/">this page&lt;/a> of static site generators, and Go is one of my most curious programming languages.&lt;/p>
&lt;p>Choosing a theme is another tricky problem. According to my requirements, I listed several bullet points for my website theme:&lt;/p>
&lt;ul>
&lt;li>The theme should support both blogging and project showcasing.&lt;/li>
&lt;li>The theme should weigh personal introduction and project listing heavier than blog articles.&lt;/li>
&lt;li>The audience should be able to see all three sections (introduction, blogs, and projects) on the index page without clicking deeper.&lt;/li>
&lt;li>The website should support RSS feeds.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://themes.gohugo.io/themes/hugo-theme-cactus/">Cactus&lt;/a> is the template I found that fits my purpose best. It has a clean design, an informative index page, and is easily configurable. It lays everything out perfectly with a few changes on the fonts and paddings.&lt;/p>
&lt;h2 id="final-words">Final words&lt;/h2>
&lt;p>During my master years at CMU ETC, I treated my website purely as a page to tell recruiters how great I am. I think it did its job well enough. Also, when I worked on the &lt;a href="https://isetta.io">Isetta Engine&lt;/a>, I found that writing my process and learnings down is excellent for postmortem and retrospection. Such articles are also more educative and helpful than most step-by-step how-to guides. I want to bring them into my website so that people can see what I did and why I made it and how I came along. I hope you enjoy this article as my first article and hope you enjoy this website.&lt;/p></description></item></channel></rss>